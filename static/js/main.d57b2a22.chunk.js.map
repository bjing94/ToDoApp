{"version":3,"sources":["components/Theme.js","components/MainPage.js","components/App.js","index.js"],"names":["white","blue","theme","createTheme","palette","common","darkBlue","black","type","primary","main","contrastText","secondary","text","typography","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightBold","useStyles","makeStyles","root","backgroundColor","height","width","AddBar","textInput","handleChange","handleAdd","useTheme","matches","useMediaQuery","breakpoints","down","Box","display","padding","justifyContent","ButtonGroup","fullWidth","orientation","TextField","label","variant","color","value","onChange","size","Button","style","onClick","ListItem","name","completed","checkItem","alignItems","bgcolor","boxShadow","Typography","Checkbox","checked","startItems","ToDoList","props","state","items","showCompleted","handleCheck","bind","newValue","this","setState","newItems","index","findIndex","item","console","log","event","target","elements","map","Grid","xs","container","spacing","FormControlLabel","control","Switch","Component","MainPage","classes","className","App","ThemeProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d57b2a22.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core\";\r\n\r\nconst white='#f5f4f2';\r\n// const gray\r\nconst blue = '#79aab2';\r\nconst darkBlue='#2d3f4c';\r\nconst darkBlue2='#284c66'\r\nconst lightBrown='#b28979';\r\nconst black='#000';\r\n\r\nconst  theme = createTheme({\r\n    palette:{\r\n        common:{\r\n            white:`${white}`,\r\n            darkBlue:`${darkBlue}`,\r\n            blue:`${blue}`,\r\n            black:`${black}`\r\n        },\r\n        type:'light',\r\n        primary:{\r\n            main:`${blue}`,\r\n            contrastText:`${white}`\r\n        },\r\n        secondary:{\r\n            main:`${white}`,\r\n            contrastText:`${white}`\r\n        },\r\n        text:{\r\n            primary:`${white}`,\r\n            secondary:`${darkBlue2}`\r\n        },\r\n\r\n    },\r\n    \r\n    typography:{\r\n        fontFamily:`'Oswald', sans-serif`,\r\n        fontSize:20,\r\n        fontWeightLight:300,\r\n        fontWeightRegular:400,\r\n        fontWeightBold:600\r\n    }\r\n})\r\nexport default theme;","import React, { Component } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  Grid,\r\n  Input,\r\n  makeStyles,\r\n  TextField,\r\n  Typography,\r\n  Checkbox,\r\n  Switch,\r\n  FormControlLabel,\r\n  useTheme,\r\n  useMediaQuery\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.common.darkBlue,\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  }\r\n}));\r\n\r\nfunction AddBar({textInput,handleChange,handleAdd}){\r\n  const theme =useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.down('xs'));\r\n  return(\r\n    <Box display=\"flex\" padding={2} justifyContent=\"center\">\r\n            <ButtonGroup fullWidth orientation={matches?'vertical':'horizontal'}>\r\n              <TextField\r\n                fullWidth\r\n                \r\n                label=\"Type something\"\r\n                variant=\"filled\"\r\n                color=\"primary\"\r\n                value={textInput}\r\n                onChange={handleChange}\r\n                size=\"large\"\r\n                \r\n              />\r\n              <Button\r\n                style={matches?{width:'auto'}:{ width: \"8rem\" }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleAdd}\r\n              >\r\n                Add\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Box>\r\n  )\r\n}\r\n\r\nfunction ListItem({ name, completed, checkItem }) {\r\n  return (\r\n    <Box\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      display=\"flex\"\r\n      padding={2}\r\n      bgcolor=\"common.blue\"\r\n      boxShadow={6}\r\n    >\r\n      <Typography color=\"textPrimary\">{name}</Typography>\r\n      <Checkbox\r\n        color=\"secondary\"\r\n        checked={completed}\r\n        onClick={() => {\r\n          checkItem(name, !completed);\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\nconst startItems = [\r\n  { name: \"Walk the dog\", completed: false },\r\n  { name: \"Play Starcraft 2\", completed: true },\r\n];\r\nclass ToDoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: startItems,\r\n      textInput: \"\",\r\n      showCompleted: false,\r\n    };\r\n\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleCheck(name, newValue) {\r\n    this.setState(({ items }) => {\r\n      let newItems = [...items];\r\n      const index = newItems.findIndex((item) => item.name === name);\r\n      newItems[index].completed = newValue;\r\n      return { items: newItems };\r\n    });\r\n  }\r\n  handleAdd() {\r\n    this.setState(({ items, textInput }) => {\r\n      let newItems = [...items, { name: textInput, completed: false }];\r\n      console.log(newItems);\r\n      return { items: newItems, textInput: \"\" };\r\n    });\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ textInput: event.target.value });\r\n  }\r\n  render() {\r\n\r\n    const elements = this.state.items.map((item) => {\r\n      if (this.state.showCompleted) {\r\n        return (\r\n          <Grid item xs={12} key={`ListItem${item.name}`}>\r\n            <ListItem\r\n              name={item.name}\r\n              completed={item.completed}\r\n              checkItem={this.handleCheck}\r\n            />\r\n          </Grid>\r\n        );\r\n      } else if (item.completed === false) {\r\n        return (\r\n          <Grid item xs={12} key={`ListItem${item.name}`}>\r\n            <ListItem\r\n              name={item.name}\r\n              completed={item.completed}\r\n              checkItem={this.handleCheck}\r\n            />\r\n          </Grid>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <AddBar textInput={this.state.textInput}\r\n          handleAdd={this.handleAdd}\r\n          handleChange={this.handleChange}/>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                color=\"primary\"\r\n                checked={this.state.showCompleted}\r\n                onClick={() => {\r\n                  this.setState({ showCompleted: !this.state.showCompleted });\r\n                }}\r\n              />\r\n            }\r\n            label={<Typography color=\"textPrimary\">Show completed</Typography>}\r\n          />\r\n        </Grid>\r\n        {elements}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function MainPage() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={6}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box display=\"flex\" padding={2} justifyContent=\"center\">\r\n                <Typography color=\"textPrimary\" variant=\"h4\">\r\n                  TO DO APP\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ToDoList />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import {ThemeProvider } from \"@material-ui/core\";\nimport theme from './Theme';\nimport MainPage from \"./MainPage\";\n\nfunction App() {\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <MainPage/>\n \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}